heat_template_version: 2013-05-23

description: >
  Generic template 1 VM 
  1 server front with SSH/HTTP/HTTPS open

parameters:

  key_name:
    type: string
    description: Name of keypair to assign to servers

  instance1_image:
    type: string
    description: Name of image to use for instance1 server
  instance1_flavor:
    type: string
    description: Flavor to use for instance1 server

  public_net_id:
    type: string
    description: >
      ID of public network for which floating IP addresses will be allocated
  private_net_id:
    type: string
    description: ID of private network into which servers get deployed
  private_subnet_id:
    type: string
    description: ID of private sub network into which servers get deployed

resources:
##############
# INSTANCE 1 #
##############

  Instance1_Server:
    type: OS::Nova::Server
    properties:
      flavor: { get_param: instance1_flavor }
      image: { get_param: instance1_image }
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: Instance1_port }
      user_data_format: RAW
      user_data:
        get_resource: init_server

  init_server:
    type: OS::Heat::MultipartMime
    properties:
      parts:
      - config: { get_resource: system_bootstrap }
      - config: { get_resource: Instance1_UserData }

  system_bootstrap:
    type: OS::Heat::SoftwareConfig
    properties:
      config: |
        #!/bin/bash
        set -x
        export DEBIAN_FRONTEND=noninteractive
        apt-get -qqy update
        apt-get -qqy upgrade
        apt-get -fyq install ansible git

  Instance1_UserData:
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
        preserve_hostname: true
        manage_etc_hosts: false
        write_files:
        - path: /root/launch.sh
          content:
            str_replace:
              template: |
                #!/bin/bash
                set -x
                #export DEBIAN_FRONTEND=noninteractive
                #apt-get -qqy update
                #apt-get -qqy upgrade
                mkdir /root/ansible
                git clone https://github.com/geerlingguy/ansible-role-mysql.git /root/ansible/mysql
                echo -e "[mysql]\n127.0.0.1 ansible_connection=local ansible_ssh_user=cloud" > /root/ansible/hosts
                cat <<EOF > /root/ansible/local.yml
                - hosts: mysql
                  roles:
                    - role: mysql
                EOF

                mkdir /root/ansible/group_vars
                cat <<EOF > /root/ansible/group_vars/mysql.yml
                mysql_root_password: super-secure-password
                mysql_databases:
                  - name: example_db
                    encoding: latin1
                    collation: latin1_general_ci
                mysql_users:
                  - name: example_user
                    host: "%"
                    password: similarly-secure-password
                    priv: "example_db.*:ALL"
                EOF

                ansible-playbook -i /root/ansible/hosts /root/ansible/local.yml -vv

                apt-get -qqy install apache2 php5 php5-mysql mysql-client
                curl -o /opt/mediawiki-1.26.2.tar.gz https://releases.wikimedia.org/mediawiki/1.26/mediawiki-1.26.2.tar.gz
                tar -zxvf /opt/mediawiki-1.26.2.tar.gz -C /opt

                git clone https://github.com/pli01/stackato-apps-samples /opt/stackato-apps-samples
                mv /opt/stackato-apps-samples/mediawiki/m* /opt/mediawiki-1.26.2/

                cat <<EOF > /etc/apache2/sites-available/mediawiki.conf
                <VirtualHost *:80>
                    ServerName wiki.yourdomain.com
                    ServerAdmin your@email

                    RewriteEngine on
                    RewriteRule (.*) /opt/mediawiki-1.26.2/\$1
                #    Alias /wiki /opt/mediawiki-1.26.2/index.php
                #    Alias /index.php /opt/mediawiki-1.26.2/index.php
                #    Alias /skins /opt/mediawiki-1.26.2/skins
                #    Alias /images /opt/mediawiki-1.26.2/images
                ##    Alias / /var/lib/mediawiki/index.php

                    <Directory /opt/mediawiki-1.26.2/>
                        Options +FollowSymLinks
                        AllowOverride All
                #        order allow,deny
                        Require all granted
                    </Directory>

                    # some directories must be protected
                    <Directory /opt/mediawiki-1.26.2/config>
                        Options -FollowSymLinks
                        AllowOverride None
                    </Directory>
                    <Directory /opt/mediawiki-1.26.2/upload>
                        Options -FollowSymLinks
                        AllowOverride None
                    </Directory>
                </VirtualHost>
                EOF

                a2enmod rewrite
                a2dissite 000-default default-ssl
                a2ensite mediawiki
                update-rc.d apache2 enable
                service apache2 restart

              params:
                $public_ip$: { get_attr: [Instance1_floating_ip, floating_ip_address] }
          owner: root:root
          permissions: '0755'

        bootcmd:
          - cloud-init-per instance my_set_hostname sh -xc "wget -O - -q http://169.254.169.254/latest/meta-data/local-hostname > /etc/hostname ; hostname -F /etc/hostname"
          - cloud-init-per instance my_set_hosts sh -xc "sed -i -e '/^127.0.1.1/d' /etc/hosts;  ( echo -n '127.0.1.1 ' ; cat /etc/hostname; echo ) >> /etc/hosts"

        runcmd:
          - /root/launch.sh

  Instance1_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: private_net_id }
      fixed_ips:
        - subnet_id: { get_param: private_subnet_id }
      security_groups: [{ get_resource: Instance1_security_group }]

  Instance1_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_net_id }
      port_id: { get_resource: Instance1_port }

  Instance1_security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      description: Add security group rules for server
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 22
          port_range_max: 22
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 80
          port_range_max: 80
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 443
          port_range_max: 443
        - remote_ip_prefix: 0.0.0.0/0
          protocol: icmp

outputs:
  Instance1_private_ip:
    description: Instance1 private IP address
    value: { get_attr: [ Instance1_Server, first_address ] }
  Instance1_public_ip:
    description: Instance1 public IP address
    value: { get_attr: [ Instance1_floating_ip, floating_ip_address ] }
  Instance1_Server_id:
    description: Instance1 nova ressource id
    value: { get_resource: Instance1_Server }
  Instance1_port_id:
    description: Instance1 port id
    value: { get_resource: Instance1_port }
  Instance1_security_group_id:
    description: Instance1 security id
    value: { get_resource: Instance1_security_group }
  Instance1_floating_ip_id:
    description: Instance1 floating ip id
    value: { get_resource: Instance1_floating_ip }
